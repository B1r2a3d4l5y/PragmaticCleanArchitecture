@page "/users/{UserId}"
@using UI.Identity;
@attribute [Authorize(Permission.WriteUsers)]

<PageTitle>Edit User</PageTitle>

<h1>Edit User</h1>

@if (Model == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@Model.User" OnValidSubmit="UpdateUser">
        <div class="form-group">
            <label for="username">Name</label>
            <InputText id="username" @bind-Value="Model.User.Name" class="form-control" />
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="Model.User.Email" class="form-control" />
        </div>

        <div class="form-group">
            <label for="roles">Roles</label>
            @foreach (var role in Model.AllRoles)
            {
                var isChecked = Model.User.Roles.Contains(role);
                <div class="form-check">
                    <InputCheckbox class="form-check-input" id="@($"role-{role}")" Value="@isChecked" ValueExpression="() => isChecked" ValueChanged="@(e => ToggleSelectedRole(role))" />
                    <label class="form-check-label" for="@($"role-{role}")">
                        @role
                    </label>
                </div>
            }
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
    </EditForm>
}
